{"version":3,"sources":["components/Input.js","logo.svg","components/Loading.js","utils.js","screens/InformationPage.js","actions/personInformation.js","screens/Name.js","actions/movies.js","screens/Genres.js","screens/Year.js","screens/Home.js","screens/Watchlist.js","screens/App.js","serviceWorker.js","reducers/movies.js","reducers/personInformation.js","reducers/informationAboutFilm.js","reducers/index.js","index.js"],"names":["Input","onChange","onBlur","onFocus","id","placeholder","Loading","className","src","logo","width","height","alt","Fetch","url","params","fetch","then","response","json","addToWatchList","movieId","currentWatchlist","JSON","parse","localStorage","getItem","updateWatchlist","setItem","stringify","removeFromWatchList","updatedWatchList","filter","element","isMovieInWatchListFunction","_","includes","InformationPage","props","useState","informationAboutFilm","setInformationAboutFilm","trailers","setTrailers","castAndCrew","setCastAndCrew","recommendations","setRecommendations","informationPageLoading","setInformationPageLoading","isMovieInWatchListState","setIsMovieInWatchListState","fetchInfotmationForInformationPage","a","res1","res2","res3","results","res4","useEffect","match","genres","production_countries","crew","cast","directors","job","writers","onClick","original_title","to","moment","release_date","format","duration","runtime","replace","map","el","index","name","length","iso_3166_1","xmlns","stroke","fill","viewBox","d","vote_average","vote_count","poster_path","key","frameBorder","allow","allowFullScreen","title","overview","style","marginLeft","slice","result","setPersonInformation","personInformation","type","setWorksOfThisPerson","worksOfThisPerson","setNamePageLoading","namePageLoading","Name","this","getInformationForNamePage","prevProps","fetchPeopleInfo","known_for_department","profile_path","biography","birthday","place_of_birth","character","React","Component","connect","state","dispatch","personId","setMoviesByGenres","moviesByGenres","setMoviesByGenresLoading","loading","moviesByGenresLoading","setMoviesByYear","moviesByYear","setMoviesByYearLoading","moviesByYearLoading","Genres","getMoviesByGenres","componentDidMount","flexDirection","movies","Year","getMoviesByYear","Home","trendingMovies","setTrendingMovies","trendingMoviesLoading","setTrendingMoviesLoading","fetchTrendingMovies","res","color","Watchlist","getActualWatchList","actualWatchList","currentUniqueWatchList","uniqBy","setState","moviesInformation","App","inputValue","selectedValue","inputIsFocused","error","post","setTimeout","event","value","target","posts","catch","handleInput","exact","path","component","Boolean","window","location","hostname","initialState","action","combineReducers","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d8abef6.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\n\n// const Input = props => (\n//   <input\n//     id={\"focus\"}\n//     onChange={props.onChange}\n//     onBlur={props.onBlur}\n//     onFocus={props.onFocus}\n//     placeholder={\"  Find Movies...\"}\n//   />\n// );\n\nconst Input = ({ onChange, onBlur, onFocus }) => (\n  <input\n    onChange={onChange}\n    onBlur={onBlur}\n    onFocus={onFocus}\n    id={\"focus\"}\n    placeholder={\"  Find Movies...\"}\n  />\n);\n\nexport default Input;\n","export default __webpack_public_path__ + \"static/media/logo.927f1d60.svg\";","import React from \"react\";\nimport \"../App.css\";\nimport logo from \"../logo.svg\";\n\nfunction Loading() {\n  return (\n    <div className={\"Container\"}>\n      <div className={\"Loader\"}>\n        <img src={logo} width=\"200\" height=\"200\" alt=\"logo\"></img>\n        <h1>Fetching Data</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Loading;","import _ from \"lodash\";\n\nexport const Fetch = (url, params) => {\n  return fetch(url).then(response => response.json());\n};\n\nexport const addToWatchList = movieId => {\n  let currentWatchlist =\n    JSON.parse(localStorage.getItem(\"watchlistMovieIds\")) || [];\n  let updateWatchlist = [...currentWatchlist, movieId];\n  localStorage.setItem(\"watchlistMovieIds\", JSON.stringify(updateWatchlist));\n};\n\nexport const removeFromWatchList = movieId => {\n  let currentWatchlist =\n    JSON.parse(localStorage.getItem(\"watchlistMovieIds\")) || [];\n  const updatedWatchList = currentWatchlist.filter(\n    element => element.id !== movieId\n  );\n  localStorage.setItem(\"watchlistMovieIds\", JSON.stringify(updatedWatchList));\n};\n\nexport const isMovieInWatchListFunction = movieId => {\n  let currentWatchlist = JSON.stringify(\n    localStorage.getItem(\"watchlistMovieIds\")\n  );\n  return _.includes(currentWatchlist, movieId);\n};\n\nexport const clearWatchList = () => {\n  localStorage.setItem(\"watchlistMovieIds\", \"[]\");\n};\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport moment from \"moment/moment\";\nimport \"moment-duration-format\";\nimport Loading from \"../components/Loading\";\nimport { Link } from \"react-router-dom\";\nimport {\n  addToWatchList,\n  removeFromWatchList,\n  isMovieInWatchListFunction\n} from \"../utils\";\n\nconst InformationPage = (props) => {\n  const [informationAboutFilm, setInformationAboutFilm] = useState([]);\n  const [trailers, setTrailers] = useState([]);\n  const [castAndCrew, setCastAndCrew] = useState([]);\n  const [recommendations, setRecommendations] = useState([]);\n  const [informationPageLoading, setInformationPageLoading] = useState(false);\n  const [isMovieInWatchListState, setIsMovieInWatchListState] = useState(false);\n\n  const fetchInfotmationForInformationPage = async (id) => {\n    setInformationPageLoading(true);\n\n    const res1 = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=6ed6e56030be8bc7d1821d5b302e302e&language=en-US`\n    );\n    const informationAboutFilm = await res1.json();\n    setInformationAboutFilm(informationAboutFilm);\n\n    const res2 = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}}/credits?api_key=6ed6e56030be8bc7d1821d5b302e302e`\n    );\n    const castAndCrew = await res2.json();\n    setCastAndCrew(castAndCrew);\n\n    const res3 = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}/videos?api_key=6ed6e56030be8bc7d1821d5b302e302e&language=en-US`\n    );\n    const trailers = await res3.json();\n    setTrailers(trailers.results[0]);\n\n    const res4 = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}/recommendations?api_key=6ed6e56030be8bc7d1821d5b302e302e&language=en-US&page=1`\n    );\n    const recommendations = await res4.json();\n    setRecommendations(recommendations.results);\n\n    setIsMovieInWatchListState(\n      isMovieInWatchListFunction(id)\n    );\n\n    setInformationPageLoading(false);\n  };\n\n  useEffect(() => {\n    fetchInfotmationForInformationPage(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const genres = informationAboutFilm.genres || [];\n  const production_countries = informationAboutFilm.production_countries || [];\n  const crew = castAndCrew.crew || [];\n  const cast = castAndCrew.cast || [];\n  const directors = crew.filter((element) => element.job === \"Director\") || [];\n  const writers = crew.filter((element) => element.job === \"Writer\") || [];\n\n  return informationPageLoading ? (\n    <Loading />\n  ) : (\n    <div className={\"Container\"}>\n      <div className={\"TitleBlock\"}>\n        {isMovieInWatchListState ? (\n          <button\n            id={\"remove\"}\n            onClick={() => {\n              removeFromWatchList(informationAboutFilm.id);\n              setIsMovieInWatchListState(false);\n            }}\n          >\n            <p>\n              remove from\n              <br />\n              WatchList\n            </p>\n          </button>\n        ) : (\n          <button\n            id={\"add\"}\n            onClick={() => {\n              addToWatchList(informationAboutFilm);\n              setIsMovieInWatchListState(true);\n            }}\n          >\n            <p>\n              add to\n              <br />\n              WatchList\n            </p>\n          </button>\n        )}\n\n        <div className={\"TitleBar\"}>\n          <h1>\n            {informationAboutFilm.original_title + \" \"}\n            <span>\n              (\n              <Link\n                to={`/Year/${moment(informationAboutFilm.release_date).format(\n                  \"YYYY\"\n                )}`}\n              >\n                {moment(informationAboutFilm.release_date).format(\"YYYY\")}\n              </Link>\n              )\n            </span>\n          </h1>\n\n          <div className={\"Subtext\"}>\n            <div>\n              {moment\n                .duration(informationAboutFilm.runtime, \"minutes\")\n                .format(\"h:mm\")\n                .replace(\":\", \"h \") + \"min\"}\n            </div>\n\n            <div>\n              {genres.map((el, index) => {\n                const name =\n                  index === informationAboutFilm.genres.length - 1\n                    ? el.name\n                    : `${el.name}, `;\n                return (\n                  <Link to={`/Genres/${el.id}`} key={el.id}>\n                    {name}\n                  </Link>\n                );\n              })}\n            </div>\n            <div>\n              {moment(informationAboutFilm.release_date).format(\"Do/MMM/YYYY\")}\n            </div>\n\n            <div>\n              (\n              {production_countries.map((el, index) => {\n                const name =\n                  index === informationAboutFilm.production_countries.length - 1\n                    ? el.name\n                    : `${el.name}, `;\n                return <span key={el.iso_3166_1}>{name}</span>;\n              })}\n              )\n            </div>\n          </div>\n        </div>\n        <div className={\"RatingsWrapper\"}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"50\"\n            height=\"50\"\n            stroke=\"gold\"\n            fill=\"gold\"\n            viewBox=\"0 0 35 35\"\n          >\n            <path d=\"M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z\" />\n          </svg>\n          <div>\n            <div>\n              <p>{informationAboutFilm.vote_average}</p>\n              <p>/10</p>\n            </div>\n            <p>{informationAboutFilm.vote_count}</p>\n          </div>\n        </div>\n      </div>\n      <div className={\"SlateWrapper\"}>\n        <img\n          src={`https://image.tmdb.org/t/p/w200${informationAboutFilm.poster_path}`}\n          alt={informationAboutFilm.original_title}\n        />\n        {trailers && (\n          <iframe\n            src={`https://www.youtube.com/embed/${trailers.key}`}\n            frameBorder={\"0\"}\n            allow={\n              \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n            }\n            allowFullScreen\n            title={trailers.id}\n          />\n        )}\n      </div>\n\n      <div className={\"Overview\"}>\n        <h1>{informationAboutFilm.overview}</h1>\n        <div className={\"CastCrew\"}>\n          {directors.length !== 0 && (\n            <div>\n              <b>Director: </b>\n              {directors.map((el, index) => {\n                const name =\n                  index === directors.length - 1 ? el.name : `${el.name}, `;\n                return (\n                  <Link key={el.id} to={`/Name/${el.id}`}>\n                    {name}\n                  </Link>\n                );\n              })}\n            </div>\n          )}\n\n          {writers.length !== 0 && (\n            <div>\n              <b>Writers: </b>\n              {writers.map((el, index) => {\n                const name =\n                  index === writers.length - 1 ? el.name : `${el.name}, `;\n                return (\n                  <Link key={el.id} to={`/Name/${el.id}`}>\n                    {name}\n                  </Link>\n                );\n              })}\n            </div>\n          )}\n\n          {cast.length !== 0 && (\n            <div>\n              <b>Stars: </b>\n              {castAndCrew.cast.map((el, index) => {\n                const name =\n                  index === castAndCrew.cast.length - 1\n                    ? el.name\n                    : `${el.name}, `;\n                return (\n                  <Link key={el.id} to={`/Name/${el.id}`}>\n                    {name}\n                  </Link>\n                );\n              })}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {recommendations.length !== 0 && (\n        <div className={\"KnownFor\"} style={{ marginLeft: \"60px\" }}>\n          <h3>\n            <b>Recommendations</b>\n          </h3>\n          <div className={\"KnownForItems\"}>\n            {recommendations.slice(0, 4).map((result) => (\n              <div key={result.id}>\n                <Link key={result.id} to={`/InformationPage/${result.id}`}>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w200${result.poster_path}`}\n                    alt={result.id}\n                  />\n                  {result.title}\n                </Link>\n                <h5>({moment(result.release_date).format(\"YYYY\")})</h5>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default InformationPage;\n","import { Fetch } from \"../utils\";\n\nexport const getInformationForNamePage = (personId) => {\n  return (dispatch) => {\n    dispatch(setNamePageLoading(true));\n    Fetch(\n      `https://api.themoviedb.org/3/person/${personId}?api_key=6ed6e56030be8bc7d1821d5b302e302e&language=en-US`\n    ).then((personInformation) =>\n      dispatch(setPersonInformation(personInformation))\n    );\n    Fetch(\n      `https://api.themoviedb.org/3/person/${personId}/movie_credits?api_key=6ed6e56030be8bc7d1821d5b302e302e&language=en-US`\n    ).then((worksOfThisPerson) =>\n      dispatch(setWorksOfThisPerson(worksOfThisPerson))\n    );\n  };\n};\n\nexport const setPersonInformation = (personInformation) => ({\n  type: \"SET_PERSON_INFORMATION\",\n  personInformation\n});\nexport const setWorksOfThisPerson = (worksOfThisPerson) => ({\n  type: \"SET_WORKS_OF_THIS_PERSON\",\n  worksOfThisPerson\n});\nexport const setNamePageLoading = (namePageLoading) => ({\n  type: \"SET_NAME_PAGE_LOADING\",\n  namePageLoading: namePageLoading\n});\n","import React from \"react\";\nimport Loading from \"../components/Loading\";\nimport moment from \"moment/moment\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getInformationForNamePage } from \"../actions/personInformation\";\n\nclass Name extends React.Component {\n  // fetchPeopleInfo() {\n  //   Fetch(\n  //     `https://api.themoviedb.org/3/person/${this.props.match.params.id}?api_key=6ed6e56030be8bc7d1821d5b302e302e&language=en-US`\n  //   ).then((personInformation) => {\n  //     this.setState({ personInformation: personInformation }, () =>\n  //       Fetch(\n  //         `https://api.themoviedb.org/3/person/${this.props.match.params.id}/movie_credits?api_key=6ed6e56030be8bc7d1821d5b302e302e&language=en-US`\n  //       ).then((worksOfThisPerson) => {\n  //         this.setState({ worksOfThisPerson: worksOfThisPerson }, () =>\n  //           this.setState({ personInformationLoading: true })\n  //         );\n  //       })\n  //     );\n  //   });\n  // }\n\n  componentDidMount() {\n    this.props.getInformationForNamePage(this.props.match.params.id);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.id !== prevProps.match.params.id) {\n      this.fetchPeopleInfo(this.props.match.params.id);\n    }\n  }\n\n  render() {\n    const cast = this.props.worksOfThisPerson.cast || [];\n    const crew = this.props.worksOfThisPerson.crew || [];\n\n    if (this.props.namePageLoading) {\n      return <Loading />;\n    }\n    return (\n      <div className={\"Container\"}>\n        <div className={\"TitleBar\"}>\n          <h1>{this.props.personInformation.name}</h1>\n          <h5>{this.props.personInformation.known_for_department}</h5>\n        </div>\n        {this.props.personInformation.profile_path && (\n          <img\n            src={`https://image.tmdb.org/t/p/w200${this.props.personInformation.profile_path}`}\n            alt={this.props.personInformation.name}\n          />\n        )}\n        <div className={\"Bio\"}>{this.props.personInformation.biography}</div>\n\n        {this.props.personInformation.birthday && (\n          <div className={\"Born\"}>\n            <b>Born: </b>\n            <span>\n              {moment(this.props.personInformation.birthday).format(\n                \"MMMM D, YYYY\"\n              )}{\" \"}\n            </span>\n            in\n            <span> {this.props.personInformation.place_of_birth}</span>\n          </div>\n        )}\n\n        {cast.length !== 0 && (\n          <div className={\"KnownFor\"}>\n            <h3>\n              <b>Known For</b>\n            </h3>\n            <div className={\"KnownForItems\"}>\n              {this.props.worksOfThisPerson.cast.slice(0, 5).map((result) => (\n                <div key={result.id}>\n                  <Link key={result.id} to={`/InformationPage/${result.id}`}>\n                    <img\n                      src={`https://image.tmdb.org/t/p/w200${result.poster_path}`}\n                      alt={result.id}\n                    />\n                    {result.title}\n                  </Link>\n                  <h5>{result.character}</h5>\n                  <h5>({moment(result.release_date).format(\"YYYY\")})</h5>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {crew.length !== 0 && (\n          <div className={\"KnownFor\"}>\n            <div className={\"KnownForItems\"}>\n              {this.props.worksOfThisPerson.crew.slice(0, 5).map((result) => (\n                <div key={result.id}>\n                  <Link key={result.id} to={`/InformationPage/${result.id}`}>\n                    <img\n                      src={`https://image.tmdb.org/t/p/w200${result.poster_path}`}\n                      alt={result.id}\n                    />\n                    {result.title}\n                  </Link>\n                  <h5>{result.job}</h5>\n                  <h5>({moment(result.release_date).format(\"YYYY\")})</h5>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  personInformation: state.personInformation.personInformation,\n  worksOfThisPerson: state.personInformation.worksOfThisPerson,\n  namePageLoading: state.personInformation.namePageLoading\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getInformationForNamePage: (personId) =>\n    dispatch(getInformationForNamePage(personId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Name);\n","import { Fetch } from \"../utils\";\n\nexport const getTrendingMovies = (url) => {\n  return (dispatch) => {\n    dispatch(setTrendingMoviesLoading(true));\n    Fetch(url).then((trendingMovies) =>\n      dispatch(setTrendingMovies(trendingMovies.results))\n    );\n  };\n};\nexport const setTrendingMovies = (trendingMovies) => ({\n  type: \"SET_TRENDING_MOVIES\",\n  trendingMovies\n});\nexport const setTrendingMoviesLoading = (loading) => ({\n  type: \"SET_TRENDING_MOVIES_LOADING\",\n  trendingMoviesLoading: loading\n});\n\nexport const getMoviesByGenres = (url) => {\n  return (dispatch) => {\n    dispatch(setMoviesByGenresLoading(true));\n    Fetch(url).then((moviesByGenres) =>\n      dispatch(setMoviesByGenres(moviesByGenres.results))\n    );\n  };\n};\nexport const setMoviesByGenres = (moviesByGenres) => ({\n  type: \"SET_MOVIES_BY_GENRES\",\n  moviesByGenres\n});\nexport const setMoviesByGenresLoading = (loading) => ({\n  type: \"SET_MOVIES_BY_GENRES_LOADING\",\n  moviesByGenresLoading: loading\n});\n\nexport const getMoviesByYear = (url) => {\n  return (dispatch) => {\n    dispatch(setMoviesByYearLoading(true));\n    Fetch(url).then((moviesByYear) =>\n      dispatch(setMoviesByYear(moviesByYear.results))\n    );\n  };\n};\nexport const setMoviesByYear = (moviesByYear) => ({\n  type: \"SET_MOVIES_BY_YEAR\",\n  moviesByYear\n});\nexport const setMoviesByYearLoading = (loading) => ({\n  type: \"SET_MOVIES_BY_YEAR_LOADING\",\n  moviesByYearLoading: loading\n});\n","import React from \"react\";\nimport Loading from \"../components/Loading\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getMoviesByGenres } from \"../actions/movies\";\n\nclass Genres extends React.Component {\n  componentDidMount() {\n    this.props.getMoviesByGenres(\n      `https://api.themoviedb.org/3/discover/movie?api_key=6ed6e56030be8bc7d1821d5b302e302e&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_genres=${this.props.match.params.id}`\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.id !== prevProps.match.params.id) {\n      this.componentDidMount(this.props.match.params.id);\n    }\n  }\n\n  render() {\n    if (this.props.moviesByGenresLoading) {\n      return <Loading />;\n    }\n    return (\n      <div className={\"Container\"}>\n        <div className={\"KnownForItems\"} style={{ flexDirection: \"column\" }}>\n          {this.props.moviesByGenres.map((result) => (\n            <div key={result.id} style={{ flexDirection: \"row\" }}>\n              <Link key={result.id} to={`/InformationPage/${result.id}`}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w200${result.poster_path}`}\n                  alt={result.id}\n                />\n                {result.original_title}\n              </Link>\n              <h2>{result.overview}</h2>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  moviesByGenres: state.movies.moviesByGenres,\n  moviesByGenresLoading: state.movies.moviesByGenresLoading\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getMoviesByGenres: (url) => dispatch(getMoviesByGenres(url))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Genres);\n","import React from \"react\";\nimport Loading from \"../components/Loading\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getMoviesByYear } from \"../actions/movies\";\n\nclass Year extends React.Component {\n  componentDidMount() {\n    this.props.getMoviesByYear(\n      `https://api.themoviedb.org/3/discover/movie?api_key=6ed6e56030be8bc7d1821d5b302e302e&language=en-US&sort_by=popularity.desc&certification_country=RU&include_adult=false&include_video=false&page=1&year=${this.props.match.params.id}`\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.id !== prevProps.match.params.id) {\n      this.componentDidMount(this.props.match.params.id);\n    }\n  }\n\n  render() {\n    if (this.props.moviesByYearLoading) {\n      return <Loading/>;\n    }\n    return (\n      <div className={\"Container\"}>\n        <h1>Films of {this.props.match.params.id}</h1>\n        <div className={\"KnownForItems\"} style={{ flexDirection: \"column\" }}>\n          {this.props.moviesByYear.map((result) => (\n            <div key={result.id} style={{ flexDirection: \"row\" }}>\n              <Link key={result.id} to={`/InformationPage/${result.id}`}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w200${result.poster_path}`}\n                  alt={result.id}\n                />\n                {result.original_title}\n              </Link>\n              <h2>{result.overview}</h2>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  moviesByYear: state.movies.moviesByYear,\n  moviesByYearLoading: state.movies.moviesByYearLoading\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getMoviesByYear: (url) => dispatch(getMoviesByYear(url))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Year);\n","import React from \"react\";\nimport Loading from \"../components/Loading\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = (props) => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [trendingMoviesLoading, setTrendingMoviesLoading] = useState(false);\n\n  const fetchTrendingMovies = async () => {\n    setTrendingMoviesLoading(true);\n    const res = await fetch(\n      `https://api.themoviedb.org/3/trending/movie/week?api_key=6ed6e56030be8bc7d1821d5b302e302e`\n    );\n    const trendingMovies = await res.json();\n    setTrendingMovies(trendingMovies.results);\n    setTrendingMoviesLoading(false);\n  };\n\n  useEffect(() => {\n    fetchTrendingMovies();\n  }, []);\n\n\n  return trendingMoviesLoading ? (\n    <Loading />\n  ) : (\n    <div className={\"Container\"}>\n      <div>\n        <h1 style={{ color: \"darkslategray\" }}>Trending movies this week</h1>\n      </div>\n      <div className={\"KnownForItems\"} style={{ flexDirection: \"column\" }}>\n        {trendingMovies.slice(0, 6).map((result) => (\n          <div key={result.id} style={{ flexDirection: \"row\" }}>\n            <Link key={result.id} to={`/InformationPage/${result.id}`}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200${result.poster_path}`}\n                alt={result.id}\n              />\n              {result.original_title}\n            </Link>\n            <h2 style={{ color: \"darkslategray\" }}>{result.overview}</h2>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport Loading from \"../components/Loading\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport { removeFromWatchList, clearWatchList } from \"../utils\";\n\nclass Watchlist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      moviesInformation: [],\n      loading: true\n    };\n  }\n\n  getActualWatchList = () => {\n    let actualWatchList = JSON.parse(\n      localStorage.getItem(\"watchlistMovieIds\") || \"[]\"\n    );\n    let currentUniqueWatchList = _.uniqBy(actualWatchList, \"id\");\n    this.setState({ moviesInformation: currentUniqueWatchList }, () =>\n      this.setState({ loading: false })\n    );\n  };\n\n  componentDidMount() {\n    this.getActualWatchList();\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <Loading/>;\n    }\n    return (\n      <div className={\"Container\"}>\n        <div className={\"ClearAll\"}>\n          {this.state.moviesInformation.length === 0 ? (\n            <h1>there is nothing here</h1>\n          ) : (\n            <button\n              onClick={() => {\n                clearWatchList();\n                this.setState({ moviesInformation: [] });\n              }}\n            >\n              Clear All\n            </button>\n          )}\n        </div>\n        <div className={\"KnownForItems\"} style={{ flexDirection: \"column\" }}>\n          {this.state.moviesInformation.map(result => (\n            <div id={\"Suggest\"} key={result.id}>\n              <div>\n                <Link key={result.id} to={`/InformationPage/${result.id}`}>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w200${result.poster_path}`}\n                    alt={result.id}\n                  />\n                  {result.original_title}\n                </Link>\n                <button\n                  onClick={() => {\n                    removeFromWatchList(result.id);\n                    this.getActualWatchList();\n                  }}\n                >\n                  <h3>Remove</h3>\n                </button>\n              </div>\n              <h2>{result.overview}</h2>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Watchlist;\n","import React from \"react\";\nimport \"../App.css\";\nimport Input from \"../components/Input\";\nimport InformationPage from \"../screens/InformationPage\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Name from \"../screens/Name\";\nimport Genres from \"../screens/Genres\";\nimport Year from \"../screens/Year\";\nimport Home from \"../screens/Home\";\nimport Watchlist from \"../screens/Watchlist\";\nimport {\n  Fetch,\n  addToWatchList,\n  removeFromWatchList,\n  isMovieInWatchListFunction\n} from \"../utils\";\n\nclass App extends React.Component {\n  state = {\n    inputValue: \"\",\n    selectedValue: \"\",\n    results: [],\n    inputIsFocused: true,\n    error: true,\n    loading: true,\n    post: []\n  };\n\n  handleInput(event) {\n    let value = event.target.value;\n    this.setState({ inputValue: value }, () => {\n      if (value.length > 0) {\n        Fetch(\n          `https://api.themoviedb.org/3/search/movie?api_key=6ed6e56030be8bc7d1821d5b302e302e&language=en-US&query=${this.state.inputValue}&page=1&include_adult=false`\n        )\n          .then((posts) => {\n            let results = posts.results;\n            this.setState({ results: results });\n            // console.log(results);\n          })\n          .catch(() => this.setState({ error: true }));\n      }\n    });\n  }\n\n  onBlur = () => {\n    setTimeout(() => {\n      this.setState({ inputIsFocused: false });\n    }, 500);\n    // document.getElementById(\"suggestSearch\").style.display='none';\n  };\n  onFocus = () => {\n    this.setState({ inputIsFocused: true });\n    // document.getElementById(\"suggestSearch\").style.display='block';\n  };\n\n  render() {\n    return (\n      <Router>\n        <header>\n          <div className={\"Container\"}>\n            <div className={\"home\"}>\n              <button>\n                <Link to={\"/\"}>Movie Search</Link>\n              </button>\n            </div>\n\n            <div className={\"search\"}>\n              <Input\n                onChange={(event) => this.handleInput(event)}\n                onBlur={this.onBlur}\n                onFocus={this.onFocus}\n              />\n              {this.state.inputIsFocused && (\n                <div id={\"suggestSearch\"}>\n                  {this.state.results.map((result) => (\n                    <div key={result.id} id={\"suggest\"}>\n                      <Link\n                        key={result.id}\n                        to={`/InformationPage/${result.id}`}\n                      >\n                        <img\n                          src={`https://image.tmdb.org/t/p/w500${result.poster_path}`}\n                          alt={result.title}\n                        />\n                        <div className={\"suggestionLabel\"}>\n                          <span key={result.id}>{result.title}</span>\n                          <span>\n                            (\n                            {result.release_date\n                              ? result.release_date.slice(0, -6)\n                              : \"\"}\n                            )\n                          </span>\n                        </div>\n                      </Link>\n                      {isMovieInWatchListFunction(result.id) ? (\n                        <button\n                          id={\"remove\"}\n                          onClick={() => {\n                            removeFromWatchList(result.id);\n                          }}\n                        >\n                          <p>\n                            remove from\n                            <br />\n                            WatchList\n                          </p>\n                        </button>\n                      ) : (\n                        <button\n                          id={\"add\"}\n                          onClick={() => {\n                            addToWatchList(result);\n                          }}\n                        >\n                          <p>\n                            add to\n                            <br />\n                            WatchList\n                          </p>\n                        </button>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            <div className={\"personal\"}>\n              <button>\n                <Link to={\"/Watchlist\"}>Watchlist</Link>\n              </button>\n            </div>\n          </div>\n        </header>\n        <Route exact path={\"/\"} to component={Home} />\n\n        <div className={\"Content\"}>\n          <Route path={\"/InformationPage/:id\"} component={InformationPage} />\n          <Route path={\"/Name/:id\"} component={Name} />\n          <Route path={\"/Genres/:id\"} component={Genres} />\n          <Route path={\"/Year/:id\"} component={Year} />\n          <Route path={\"/Watchlist\"} component={Watchlist} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  moviesByGenres: [],\n  moviesByGenresLoading: false,\n  moviesByYear: [],\n  moviesByYearLoading: false,\n  trendingMovies: [],\n  trendingMoviesLoading: false\n};\nconst movies = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_MOVIES_BY_GENRES\":\n      return {\n        ...state,\n        moviesByGenres: action.moviesByGenres,\n        moviesByGenresLoading: false\n      };\n    case \"SET_MOVIES_BY_GENRES_LOADING\":\n      return {\n        ...state,\n        moviesByGenresLoading: action.moviesByGenresLoading\n      };\n\n    case \"SET_MOVIES_BY_YEAR\":\n      return {\n        ...state,\n        moviesByYear: action.moviesByYear,\n        moviesByYearLoading: false\n      };\n    case \"SET_MOVIES_BY_YEAR_LOADING\":\n      return {\n        ...state,\n        moviesByYearLoading: action.moviesByYearLoading\n      };\n\n    case \"SET_TRENDING_MOVIES\":\n      return {\n        ...state,\n        trendingMovies: action.trendingMovies,\n        trendingMoviesLoading: false\n      };\n    case \"SET_TRENDING_MOVIES_LOADING\":\n      return { ...state, trendingMoviesLoading: action.trendingMoviesLoading };\n    default:\n      return state;\n  }\n};\nexport default movies;\n","const initialState = {\n  personInformation: [],\n  worksOfThisPerson: [],\n  namePageLoading: false\n};\nconst personInformation = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_PERSON_INFORMATION\":\n      return {\n        ...state,\n        personInformation: action.personInformation\n      };\n    case \"SET_WORKS_OF_THIS_PERSON\":\n      return {\n        ...state,\n        worksOfThisPerson: action.worksOfThisPerson,\n        namePageLoading: false\n      };\n    case \"SET_NAME_PAGE_LOADING\":\n      return {\n        ...state,\n        namePageLoading: action.namePageLoading\n      };\n    default:\n      return state;\n  }\n};\nexport default personInformation;\n","const initialState = {\n  informationAboutFilm: [],\n  trailers: [],\n  castAndCrew: [],\n  recommendations: [],\n  informationPageLoading: false\n};\n\nconst informationAboutFilm = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_INFORMATION_PAGE_LOADING\":\n      return {\n        ...state,\n        informationPageLoading: action.informationPageLoading\n      };\n    case \"SET_INFORMATION_ABOUT_FILM\":\n      return {\n        ...state,\n        informationAboutFilm: action.informationAboutFilm\n      };\n    case \"SET_TRAILERS\":\n      return {\n        ...state,\n        trailers: action.trailers\n      };\n    case \"SET_CAST_AND_CREW\":\n      return {\n        ...state,\n        castAndCrew: action.castAndCrew\n      };\n    case \"SET_RECOMMENDATIONS\":\n      return {\n        ...state,\n        recommendations: action.recommendations,\n        informationPageLoading: false\n      };\n    default:\n      return state;\n  }\n};\nexport default informationAboutFilm;\n","import { combineReducers } from \"redux\";\nimport movies from \"./movies\";\nimport personInformation from \"./personInformation\";\nimport informationAboutFilm from \"./informationAboutFilm\"\n\nexport default combineReducers({\n  movies, personInformation, informationAboutFilm\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./screens/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducers/index\";\nimport thunk from 'redux-thunk';\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n// console.log(store)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();"],"sourceRoot":""}